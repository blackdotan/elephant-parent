<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.ipukr.elephant</groupId>
    <artifactId>elephant-parent</artifactId>
    <packaging>pom</packaging>
    <version>2.3.0</version>

    <modules>
        <module>elephant-utils</module>
        <module>elephant-common</module>
        <module>elephant-kv</module>
        <module>elephant-push</module>
        <module>elephant-mail</module>
        <module>elephant-cloud-storage</module>
        <module>elephant-httpclient</module>
        <module>elephant-sms</module>
        <module>elephant-qr</module>
        <module>elephant-payment</module>
        <module>elephant-payment-alipay</module>
        <module>elephant-payment-lianlian</module>
        <module>elephant-payment-weixin</module>
        <module>elephant-mybatis-plugin</module>
        <module>elephant-weixin</module>
    </modules>

    <properties>
        <!-- Log -->
        <slf4j.version>1.7.7</slf4j.version>
        <log4j.version>1.2.17</log4j.version>
        <spring.boot.version>2.0.3.RELEASE</spring.boot.version>
    </properties>

    <dependencyManagement>
        <dependencies>

            <!-- Guava -->
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>23.0</version>
            </dependency>
            <!-- Java Mail -->
            <dependency>
                <groupId>javax.mail</groupId>
                <artifactId>mail</artifactId>
                <version>1.4.7</version>
            </dependency>
            <!-- Redis -->
            <dependency>
                <groupId>redis.clients</groupId>
                <artifactId>jedis</artifactId>
                <version>2.9.0</version>
            </dependency>
            <!-- Mybatis -->
            <dependency>
                <groupId>com.github.miemiedev</groupId>
                <artifactId>mybatis-paginator</artifactId>
                <version>1.2.15</version>
            </dependency>

            <!-- Json数据处理 -->
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-core</artifactId>
                <version>2.6.2</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>2.6.2</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>2.6.2</version>
            </dependency>

            <!-- Pinyin -->
            <dependency>
                <groupId>com.belerweb</groupId>
                <artifactId>pinyin4j</artifactId>
                <version>2.5.0</version>
            </dependency>

            <!-- 个推 -->
            <dependency>
                <groupId>com.gexin.platform</groupId>
                <artifactId>gexin-rp-sdk-http</artifactId>
                <version>4.0.1.17</version>
            </dependency>
            <dependency>
                <groupId>com.gexin.platform</groupId>
                <artifactId>gexin-rp-sdk-template</artifactId>
                <version>4.0.0.16</version>
            </dependency>

            <!-- 阿里支付-->
            <dependency>
                <groupId>com.alipay</groupId>
                <artifactId>sdk-java</artifactId>
                <version>2017120116003</version>
            </dependency>
            <!-- 微信支付 -->
            <dependency>
                <groupId>com.github.wxpay</groupId>
                <artifactId>wxpay-sdk</artifactId>
                <version>3.0.9</version>
            </dependency>
            <!-- Httpclient -->
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <version>4.5.6</version>
            </dependency>
            <!-- 七牛存储 -->
            <dependency>
                <groupId>com.qiniu</groupId>
                <artifactId>qiniu-java-sdk</artifactId>
                <version>[7.2.0, 7.2.99]</version>
            </dependency>

            <!-- 线程池 -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-pool2</artifactId>
                <version>2.4.2</version>
            </dependency>
            <!-- 代码混淆 -->
            <dependency>
                <groupId>net.sf.proguard</groupId>
                <artifactId>proguard</artifactId>
                <version>4.4</version>
            </dependency>
            <!-- 辅助工具 -->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>1.16.20</version>
                <scope>provided</scope>
            </dependency>
            <!-- Excel文件处理 -->
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi</artifactId>
                <version>3.17</version>
            </dependency>
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi-ooxml</artifactId>
                <version>3.17</version>
            </dependency>
            <!-- 二维码工具 -->
            <dependency>
                <groupId>com.google.zxing</groupId>
                <artifactId>core</artifactId>
                <version>3.3.3</version>
            </dependency>


            <!-- 日志框架 -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-log4j12</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>log4j</groupId>
                <artifactId>log4j</artifactId>
                <version>${log4j.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>



    <build>
        <pluginManagement>
            <plugins>
                <!-- 默认编译工具|JDK1.8 -->
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.1</version>
                    <configuration>
                        <source>1.8</source>
                        <target>1.8</target>
                        <encoding>UTF-8</encoding>
                    </configuration>
                </plugin>
                <!-- resources文件若有中文，解决编译会异常的问题 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <configuration>
                        <encoding>UTF-8</encoding>
                    </configuration>
                </plugin>
                <!--配置生成Javadoc包-->
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                </plugin>

                <!--代码混淆-->
                <plugin>
                    <groupId>com.github.wvengen</groupId>
                    <artifactId>proguard-maven-plugin</artifactId>
                    <executions>
                        <execution>
                            <!-- 混淆时刻，这里是打包的时候混淆-->
                            <phase>package</phase>
                            <goals>
                                <!-- 使用插件的什么功能，当然是混淆-->
                                <goal>proguard</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <!-- 是否将生成的PG文件安装部署-->
                        <attach>false</attach>
                        <!-- 是否混淆-->
                        <obfuscate>true</obfuscate>
                        <!-- 指定生成文件分类 -->
                        <attachArtifactClassifier>pg</attachArtifactClassifier>
                        <options>
                            <!-- JDK目标版本1.7-->
                            <option>-target 1.8</option>
                            <!-- 不做收缩（删除注释、未被引用代码）-->
                            <option>-dontshrink</option>
                            <!-- 不做优化（变更代码实现逻辑）-->
                            <option>-dontoptimize</option>
                            <!-- 不路过非公用类文件及成员-->
                            <option>-dontskipnonpubliclibraryclasses</option>
                            <option>-dontskipnonpubliclibraryclassmembers</option>
                            <!-- 优化时允许访问并修改有修饰符的类和类的成员 -->
                            <option>-allowaccessmodification</option>
                            <!-- 确定统一的混淆类的成员名称来增加混淆-->
                            <option>-useuniqueclassmembernames</option>
                            <!-- 不混淆所有包名，本人测试混淆后WEB项目问题实在太多，毕竟Spring配置中有大量固定写法的包名-->
                            <option>-keeppackagenames</option>
                            <!-- 不混淆所有特殊的类-->
                            <option>-keepattributes Signature,Exceptions</option>
                            <!-- 不混淆所有的set/get方法，毕竟项目中使用的部分第三方框架（例如Shiro）会用到大量的set/get映射-->
                            <!--<option>-keepclassmembers public class * {void set*(***);*** get*();}</option>-->

                            <!-- 不混淆job包下的所有类名，且类中的方法也不混淆-->
                            <!--<option>-keep class com.chinatelecom.gz.wy.zhukun.shiro_spring.job.** { &lt;methods&gt;; }</option>-->
                            <!--&lt;!&ndash; 不混淆filter包下的所有类名，这里主要是对Shiro的路踢人过滤器混淆，对类的属性和方法进行了混淆&ndash;&gt;-->
                            <!--<option>-keep class com.chinatelecom.gz.wy.zhukun.shiro_spring.filter.** </option>-->
                            <!--&lt;!&ndash; 不混淆凭证包下的所有类名，但对类中的属性、方法进行混淆，原因是Spring配置中用到了这个类名&ndash;&gt;-->
                            <!--<option>-keep class com.chinatelecom.gz.wy.zhukun.shiro_spring.credntials.** </option>-->
                            <!--&lt;!&ndash; 混淆目的同上，这个是拦截器的包，包中有防止重复提交的拦截器&ndash;&gt;-->
                            <!--<option>-keep class com.chinatelecom.gz.wy.zhukun.shiro_spring.interceptor.** </option>-->
                            <!--&lt;!&ndash; 混淆目的同上，这个是域包，包中有用户登录域&ndash;&gt;-->
                            <!--<option>-keep class com.chinatelecom.gz.wy.zhukun.shiro_spring.realm.** </option>-->
                            <!--&lt;!&ndash; 不混淆model包中的所有类以及类的属性及方法，实体包，混淆了会导致ORM框架及前端无法识别&ndash;&gt;-->
                            <!--<option>-keep class com.chinatelecom.gz.wy.zhukun.shiro_spring.model.** {*;}</option>-->
                            <!--&lt;!&ndash; 以下两个包因为大部分是Spring管理的Bean，不对包类的类名进行混淆，但对类中的属性和方法混淆&ndash;&gt;-->
                            <!--<option>-keep class com.chinatelecom.gz.wy.zhukun.shiro_spring.service.** </option>-->
                            <option>-keep class com.ipukr.elephant.** { &lt;methods&gt;; }</option>
                        </options>
                        <injar>${project.build.finalName}.jar</injar>
                        <outjar>${project.build.finalName}.jar</outjar>
                        <!-- 添加依赖，这里你可以按你的需要修改，这里测试只需要一个JRE的Runtime包就行了 -->
                        <libs>
                            <lib>${java.home}/lib/rt.jar</lib>
                        </libs>
                        <!-- 加载文件的过滤器，就是你的工程目录了-->
                        <!--<inFilter>com/chinatelecom/gz/wy/zhukun/shiro_spring/**</inFilter>-->
                        <!-- 对什么东西进行加载，这里仅有classes成功，毕竟你也不可能对配置文件及JSP混淆吧-->
                        <!--<injar>classes</injar>-->
                        <!-- 输出目录-->
                        <outputDirectory>${project.build.directory}</outputDirectory>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>


    <!--
        钚氪代码仓库
        账号/密码：guest/guest123456

        setting.xml配置
        =============================================================================
        <server>
            <id>ipukr_repo</id>
            <username>guest</username>
            <password>guest123456</password>
        </server>
        =============================================================================
    -->
    <repositories>
        <repository>
            <id>ipukr_repo</id>
            <url>https://repo.ipukr.cn/nexus/content/groups/develop/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>
    <distributionManagement>
        <repository>
            <id>ipukr_repo</id>
            <name>Nexus Releases Repository</name>
            <url>https://repo.ipukr.cn/nexus/content/repositories/releases/</url>
        </repository>
        <snapshotRepository>
            <id>ipukr_repo</id>
            <name>Nexus Snapshots Repository</name>
            <url>https://repo.ipukr.cn/nexus/content/repositories/snapshots/</url>
        </snapshotRepository>
    </distributionManagement>
    <pluginRepositories>
        <pluginRepository>
            <id>ipukr_repo</id>
            <name>Nexus</name>
            <url>https://repo.ipukr.cn/nexus/content/groups/develop/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>


</project>